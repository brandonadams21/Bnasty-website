{"ast":null,"code":"import _asyncToGenerator from \"/Users/brandonadams/website/blog-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/brandonadams/website/blog-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/brandonadams/website/blog-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/brandonadams/website/blog-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _styled,\n    _jsxFileName = \"/Users/brandonadams/website/blog-app/src/components/pages/Contact.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React, { useState } from \"react\";\nimport './Contact.css';\nimport styled from 'styled-components';\nimport airtable from 'airtable';\nimport Airtable from \"airtable\"; // const FORM_ENDPOINT = \"/contact\"; // TODO - fill on the later step\n\nvar ContactContainer = styled('div')({\n  backgroundColor: '#242424'\n});\nvar Form = styled('form')((_styled = {\n  maxWidth: '500px',\n  padding: '10px 20px',\n  background: '#242424',\n  margin: ' 10px auto'\n}, _defineProperty(_styled, \"padding\", '20px'), _defineProperty(_styled, \"borderRadius\", '8px'), _defineProperty(_styled, \"fontFamily\", ' Georgia, \"Times New Roman\", Times, serif'), _styled));\nvar Input = styled('input')({\n  position: 'relative',\n  display: 'block',\n  padding: '19px 39px 18px 39px',\n  color: '#8d8d8d',\n  margin: ' 0 auto',\n  background: '#2b2b2b',\n  fontSize: '18px',\n  textAlign: 'center',\n  fontstyle: 'normal',\n  width: '100%',\n  border: '1px solid #16a085',\n  borderWidth: '1px 1px 3px',\n  marginBottom: '10px'\n});\nvar TextArea = styled('textarea')({\n  position: 'relative',\n  display: 'block',\n  padding: '19px 39px 18px 39px',\n  color: '#8d8d8d',\n  margin: ' 0 auto',\n  background: '#2b2b2b',\n  fontSize: '18px',\n  textAlign: 'center',\n  fontstyle: 'normal',\n  width: '100%',\n  border: '1px solid #16a085',\n  borderWidth: '1px 1px 3px',\n  marginBottom: '10px'\n}); //   return (\n// //       <ContactContainer>\n// //     <Form\n// //     //   action={FORM_ENDPOINT}\n// //       onSubmit={sendData}\n// //     //   method=\"POST\"\n// //     //   target=\"_blank\"\n// //     >\n// //         <h1 style={{color: 'white'}}>Let's get in touch!</h1>\n// //       <div className=\"name\">\n// //         <Input\n// //           type=\"text\"\n// //           placeholder=\"Your name\"\n// //           name=\"name\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //       </div>\n// //       <div className=\"email\" >\n// //         <Input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           name=\"email\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //       </div>\n// //       <div className=\"message\">\n// //       <p>\n// //         <TextArea\n// //           placeholder=\"Your message\"\n// //           name=\"message\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //         </p>\n// //       </div>\n// //       <div className=\"submit\">\n// //         <button\n// //           type=\"submit\"\n// //         //   style={{\n// //         //   height: '50px', \n// //         //   width: '100%', \n// //         //   color: 'transparent',\n// //         //   position: 'relative',\n// //         //   alignItems: 'center',\n// //         //   textDecoration: 'none',\n// //         //   letterSpacing: '2px',\n// //         //   webkitTextStroke: '1px rgba(255, 255, 255, .5)',\n// //         //   fontSize: '2em',\n// //         //   textTransform: 'uppercase',\n// //         //   lineHeight: '1em',\n// //         //   backgroundColor: 'transparent',\n// //         // }}\n// //         >\n// //           Send a message\n// //         </button>\n// //         {message}\n// //       </div>\n// //     </Form>\n// //     </ContactContainer>\n// //   );\n// // };\n// <div className=\"App\">\n// <form\n//     className=\"input-form\"\n//     id=\"contact\"\n//     name=\"contact\"\n//     onSubmit={sendData}\n// >\n//     <input\n//         name=\"email\"\n//         type=\"email\"\n//         placeholder=\"Email\"\n//         onChange={handleInput}\n//     />\n//     <textarea\n//         name=\"message\"\n//         type=\"text\"\n//         placeholder=\"Message\"\n//         onChange={handleInput}\n//     />\n//     <input name=\"submit\" type=\"submit\" value=\"Send\" />\n//     {message}\n// </form>\n// </div>\n// )\n// }\n// export default Contact;\n\nexport default function Contact() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var handleInput = function handleInput(e) {\n    var copyFormData = _objectSpread({}, formData);\n\n    copyFormData[e.target.name] = e.target.value;\n    setFormData(copyFormData);\n  };\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var base;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              try {\n                base = new Airtable({\n                  apiKey: 'keyxSTqLDEz2AWFJI'\n                }).base('appi3ey74toVdwQ6Q');\n                base('Teams').create([{\n                  \"fields\": {\n                    \"name\": formData.name,\n                    \"message\": formData.message,\n                    \"email\": formData.email\n                  }\n                }], function (err, records) {\n                  if (err) {\n                    console.error(err);\n                    return;\n                  }\n\n                  records.forEach(function (record) {});\n                });\n                setMessage(\"Success\");\n              } catch (error) {\n                console.error(\"Error:\", error);\n                setMessage(\"Error\");\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendData(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-form\",\n    id: \"contact\",\n    name: \"contact\",\n    required: true,\n    onSubmit: sendData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"name\" // name should matched with your airtable table field\n    ,\n    type: \"text\",\n    placeholder: \"Name\",\n    required: true,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\" // name should matched with your airtable table field\n    ,\n    type: \"email\",\n    placeholder: \"Email\",\n    required: true,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"message\" // name should matched with your airtable table field\n    ,\n    placeholder: \"Message\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"submit\",\n    type: \"submit\",\n    value: \"Send\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), message));\n}","map":{"version":3,"names":["React","useState","styled","airtable","Airtable","ContactContainer","backgroundColor","Form","maxWidth","padding","background","margin","Input","position","display","color","fontSize","textAlign","fontstyle","width","border","borderWidth","marginBottom","TextArea","Contact","formData","setFormData","message","setMessage","handleInput","e","copyFormData","target","name","value","sendData","preventDefault","base","apiKey","create","email","err","records","console","error","forEach","record"],"sources":["/Users/brandonadams/website/blog-app/src/components/pages/Contact.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport './Contact.css'\nimport styled from 'styled-components'\n\nimport airtable from 'airtable'\nimport Airtable from \"airtable\";\n\n\n// const FORM_ENDPOINT = \"/contact\"; // TODO - fill on the later step\n\nconst ContactContainer = styled('div')({\n    backgroundColor: '#242424',\n})\n\nconst Form = styled('form')({\n  maxWidth: '500px',\n\tpadding: '10px 20px',\n\tbackground: '#242424',\n\tmargin:' 10px auto',\n\tpadding: '20px',\n\tborderRadius: '8px',\n\tfontFamily:' Georgia, \"Times New Roman\", Times, serif',\n})\n\nconst Input = styled('input')({\n  position: 'relative',\n\tdisplay: 'block',\n\tpadding: '19px 39px 18px 39px',\n\tcolor: '#8d8d8d',\n\tmargin:' 0 auto',\n\tbackground: '#2b2b2b',\n\tfontSize: '18px',\n\ttextAlign: 'center',\n\tfontstyle: 'normal',\n\twidth: '100%',\n\tborder: '1px solid #16a085',\n\tborderWidth: '1px 1px 3px',\n\tmarginBottom: '10px',\n})\n\nconst TextArea = styled('textarea')({\n  position: 'relative',\n\tdisplay: 'block',\n\tpadding: '19px 39px 18px 39px',\n\tcolor: '#8d8d8d',\n\tmargin:' 0 auto',\n\tbackground: '#2b2b2b',\n\tfontSize: '18px',\n\ttextAlign: 'center',\n\tfontstyle: 'normal',\n\twidth: '100%',\n\tborder: '1px solid #16a085',\n\tborderWidth: '1px 1px 3px',\n\tmarginBottom: '10px',\n})\n\n\n//   return (\n// //       <ContactContainer>\n// //     <Form\n// //     //   action={FORM_ENDPOINT}\n// //       onSubmit={sendData}\n// //     //   method=\"POST\"\n// //     //   target=\"_blank\"\n// //     >\n// //         <h1 style={{color: 'white'}}>Let's get in touch!</h1>\n// //       <div className=\"name\">\n// //         <Input\n// //           type=\"text\"\n// //           placeholder=\"Your name\"\n// //           name=\"name\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //       </div>\n// //       <div className=\"email\" >\n// //         <Input\n// //           type=\"email\"\n// //           placeholder=\"Email\"\n// //           name=\"email\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //       </div>\n// //       <div className=\"message\">\n// //       <p>\n// //         <TextArea\n// //           placeholder=\"Your message\"\n// //           name=\"message\"\n// //           required\n// //           onChange={handleInput}\n// //         />\n// //         </p>\n// //       </div>\n// //       <div className=\"submit\">\n// //         <button\n// //           type=\"submit\"\n// //         //   style={{\n// //         //   height: '50px', \n// //         //   width: '100%', \n// //         //   color: 'transparent',\n// //         //   position: 'relative',\n// //         //   alignItems: 'center',\n// //         //   textDecoration: 'none',\n// //         //   letterSpacing: '2px',\n// //         //   webkitTextStroke: '1px rgba(255, 255, 255, .5)',\n// //         //   fontSize: '2em',\n// //         //   textTransform: 'uppercase',\n// //         //   lineHeight: '1em',\n// //         //   backgroundColor: 'transparent',\n// //         // }}\n// //         >\n// //           Send a message\n// //         </button>\n// //         {message}\n// //       </div>\n// //     </Form>\n// //     </ContactContainer>\n// //   );\n// // };\n// <div className=\"App\">\n// <form\n//     className=\"input-form\"\n//     id=\"contact\"\n//     name=\"contact\"\n//     onSubmit={sendData}\n// >\n//     <input\n//         name=\"email\"\n//         type=\"email\"\n//         placeholder=\"Email\"\n//         onChange={handleInput}\n//     />\n//     <textarea\n//         name=\"message\"\n//         type=\"text\"\n//         placeholder=\"Message\"\n//         onChange={handleInput}\n//     />\n//     <input name=\"submit\" type=\"submit\" value=\"Send\" />\n//     {message}\n// </form>\n// </div>\n// )\n// }\n\n\n// export default Contact;\n\n\nexport default function Contact() {\n    const [formData, setFormData] = useState({})\n    const [message, setMessage] = useState(\"\")\n\n    const handleInput = (e) => {\n        const copyFormData = { ...formData }\n        copyFormData[e.target.name] = e.target.value\n        setFormData(copyFormData)\n    }\n\n    const sendData = async (e) => {\n        e.preventDefault()\n        try {\n        var base = new Airtable({apiKey: 'keyxSTqLDEz2AWFJI'}).base('appi3ey74toVdwQ6Q');\n        base('Teams').create([\n          {\n            \"fields\": {\n              \"name\": formData.name,\n              \"message\": formData.message,\n              \"email\": formData.email\n            }\n          },\n        ], function(err, records) {\n          if (err) {\n            console.error(err);\n            return;\n          }\n          records.forEach(function (record) {\n          });\n        });\n            setMessage(\"Success\")\n        } catch (error) {\n            console.error(\"Error:\", error)\n            setMessage(\"Error\")\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            <form\n                className=\"input-form\"\n                id=\"contact\"\n                name=\"contact\"\n                required\n                onSubmit={sendData}\n            >\n                <input\n                    name=\"name\" // name should matched with your airtable table field\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    required\n                    onChange={handleInput}\n                />\n                <input\n                    name=\"email\" // name should matched with your airtable table field\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    onChange={handleInput}\n                />\n                <textarea\n                    name=\"message\" // name should matched with your airtable table field\n                    placeholder=\"Message\"\n                    onChange={handleInput}\n                />\n                <input name=\"submit\" type=\"submit\" value=\"Send\" />\n                {message}\n            </form>\n        </div>\n    )\n}"],"mappings":";;;;;;;;+CACA,oJ;;AADA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAGA;;AAEA,IAAMC,gBAAgB,GAAGH,MAAM,CAAC,KAAD,CAAN,CAAc;EACnCI,eAAe,EAAE;AADkB,CAAd,CAAzB;AAIA,IAAMC,IAAI,GAAGL,MAAM,CAAC,MAAD,CAAN;EACXM,QAAQ,EAAE,OADC;EAEZC,OAAO,EAAE,WAFG;EAGZC,UAAU,EAAE,SAHA;EAIZC,MAAM,EAAC;AAJK,uCAKH,MALG,4CAME,KANF,0CAOD,2CAPC,YAAb;AAUA,IAAMC,KAAK,GAAGV,MAAM,CAAC,OAAD,CAAN,CAAgB;EAC5BW,QAAQ,EAAE,UADkB;EAE7BC,OAAO,EAAE,OAFoB;EAG7BL,OAAO,EAAE,qBAHoB;EAI7BM,KAAK,EAAE,SAJsB;EAK7BJ,MAAM,EAAC,SALsB;EAM7BD,UAAU,EAAE,SANiB;EAO7BM,QAAQ,EAAE,MAPmB;EAQ7BC,SAAS,EAAE,QARkB;EAS7BC,SAAS,EAAE,QATkB;EAU7BC,KAAK,EAAE,MAVsB;EAW7BC,MAAM,EAAE,mBAXqB;EAY7BC,WAAW,EAAE,aAZgB;EAa7BC,YAAY,EAAE;AAbe,CAAhB,CAAd;AAgBA,IAAMC,QAAQ,GAAGrB,MAAM,CAAC,UAAD,CAAN,CAAmB;EAClCW,QAAQ,EAAE,UADwB;EAEnCC,OAAO,EAAE,OAF0B;EAGnCL,OAAO,EAAE,qBAH0B;EAInCM,KAAK,EAAE,SAJ4B;EAKnCJ,MAAM,EAAC,SAL4B;EAMnCD,UAAU,EAAE,SANuB;EAOnCM,QAAQ,EAAE,MAPyB;EAQnCC,SAAS,EAAE,QARwB;EASnCC,SAAS,EAAE,QATwB;EAUnCC,KAAK,EAAE,MAV4B;EAWnCC,MAAM,EAAE,mBAX2B;EAYnCC,WAAW,EAAE,aAZsB;EAanCC,YAAY,EAAE;AAbqB,CAAnB,CAAjB,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAGA,eAAe,SAASE,OAAT,GAAmB;EAAA,gBACEvB,QAAQ,CAAC,EAAD,CADV;EAAA;EAAA,IACvBwB,QADuB;EAAA,IACbC,WADa;;EAAA,iBAEAzB,QAAQ,CAAC,EAAD,CAFR;EAAA;EAAA,IAEvB0B,OAFuB;EAAA,IAEdC,UAFc;;EAI9B,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;IACvB,IAAMC,YAAY,qBAAQN,QAAR,CAAlB;;IACAM,YAAY,CAACD,CAAC,CAACE,MAAF,CAASC,IAAV,CAAZ,GAA8BH,CAAC,CAACE,MAAF,CAASE,KAAvC;IACAR,WAAW,CAACK,YAAD,CAAX;EACH,CAJD;;EAMA,IAAMI,QAAQ;IAAA,sEAAG,iBAAOL,CAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cACbA,CAAC,CAACM,cAAF;;cACA,IAAI;gBACAC,IADA,GACO,IAAIjC,QAAJ,CAAa;kBAACkC,MAAM,EAAE;gBAAT,CAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CADP;gBAEJA,IAAI,CAAC,OAAD,CAAJ,CAAcE,MAAd,CAAqB,CACnB;kBACE,UAAU;oBACR,QAAQd,QAAQ,CAACQ,IADT;oBAER,WAAWR,QAAQ,CAACE,OAFZ;oBAGR,SAASF,QAAQ,CAACe;kBAHV;gBADZ,CADmB,CAArB,EAQG,UAASC,GAAT,EAAcC,OAAd,EAAuB;kBACxB,IAAID,GAAJ,EAAS;oBACPE,OAAO,CAACC,KAAR,CAAcH,GAAd;oBACA;kBACD;;kBACDC,OAAO,CAACG,OAAR,CAAgB,UAAUC,MAAV,EAAkB,CACjC,CADD;gBAED,CAfD;gBAgBIlB,UAAU,CAAC,SAAD,CAAV;cACH,CAnBD,CAmBE,OAAOgB,KAAP,EAAc;gBACZD,OAAO,CAACC,KAAR,CAAc,QAAd,EAAwBA,KAAxB;gBACAhB,UAAU,CAAC,OAAD,CAAV;cACH;;YAxBY;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAARO,QAAQ;MAAA;IAAA;EAAA,GAAd;;EA2BA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IACI,SAAS,EAAC,YADd;IAEI,EAAE,EAAC,SAFP;IAGI,IAAI,EAAC,SAHT;IAII,QAAQ,MAJZ;IAKI,QAAQ,EAAEA,QALd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAOI;IACI,IAAI,EAAC,MADT,CACgB;IADhB;IAEI,IAAI,EAAC,MAFT;IAGI,WAAW,EAAC,MAHhB;IAII,QAAQ,MAJZ;IAKI,QAAQ,EAAEN,WALd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAPJ,eAcI;IACI,IAAI,EAAC,OADT,CACiB;IADjB;IAEI,IAAI,EAAC,OAFT;IAGI,WAAW,EAAC,OAHhB;IAII,QAAQ,MAJZ;IAKI,QAAQ,EAAEA,WALd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAdJ,eAqBI;IACI,IAAI,EAAC,SADT,CACmB;IADnB;IAEI,WAAW,EAAC,SAFhB;IAGI,QAAQ,EAAEA,WAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EArBJ,eA0BI;IAAO,IAAI,EAAC,QAAZ;IAAqB,IAAI,EAAC,QAA1B;IAAmC,KAAK,EAAC,MAAzC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EA1BJ,EA2BKF,OA3BL,CADJ,CADJ;AAiCH"},"metadata":{},"sourceType":"module"}